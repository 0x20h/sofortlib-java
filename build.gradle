apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

sourceSets {
	main { 
		java { srcDirs 'src' } 
		resources { srcDirs 'resources' }
	}
	test {
		java { srcDirs 'tests' }
		resources { srcDirs 'testresources' }
	}
}

repositories {
	mavenCentral()
}

group = 'com.sofort'
version = '1.0.4'
	
dependencies {
	compile(group: 'commons-logging', name: 'commons-logging', version: '1.2')
	runtime(group: 'log4j', name: 'log4j', version: '1.2.17')
	testCompile(group: 'org.testng', name: 'testng', version: '6.8.8')
}

task test(overwrite: true, type: Test, dependsOn: clean) {
	compileJava.mustRunAfter clean
	useTestNG() {
		suites 'testng.xml'
		useDefaultListeners(false)
		outputDirectory = file('build/test-results')
	}
	systemProperty 'log4j.configuration', 'log4j.properties'
	reports.html.enabled = false
	reports.junitXml.enabled = false
	ignoreFailures = true
}

task sourcesJar(type: Jar, dependsOn:classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task testsJar(type: Jar, dependsOn:testClasses) {
	classifier = 'tests'
	from sourceSets.test.output
	from sourceSets.test.allJava
}

task javadocJar(type: Jar, dependsOn:javadoc) {
	classifier = 'javadoc'
	from fileTree('build/docs/javadoc')
}

task buildAll {
}

buildAll.dependsOn jar
buildAll.dependsOn testsJar
buildAll.dependsOn sourcesJar
buildAll.dependsOn javadocJar

task wrapper(type: Wrapper) {
  gradleVersion = "2.5"
}